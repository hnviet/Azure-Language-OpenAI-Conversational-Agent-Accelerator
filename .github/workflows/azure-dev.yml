name: Azure Template Validation
on: 
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  template_validation_job:
    runs-on: ubuntu-latest
    name: template validation
    steps:
      - uses: actions/checkout@v4

      - uses: microsoft/template-validation-action@Latest
        id: validation
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACS_CONNECTION_STRING: ${{ secrets.ACS_CONNECTION_STRING }}
          
      - name: print result
        run: cat ${{ steps.validation.outputs.resultFile }}

  deploy_job:
    name: Provision & Deploy
    needs: template_validation_job
    runs-on: ubuntu-latest

    # Tell GitHub Actions to use your “dev” environment (so you can lock down approvals, etc)
    environment: dev

    # Export the ACS secret into the job’s shell environment
    env:
      ACS_CONNECTION_STRING: ${{ secrets.ACS_CONNECTION_STRING }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy infra & app
        run: |
          azd up --yes